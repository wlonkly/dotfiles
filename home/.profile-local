#!/usr/bin/env bash
# -*- mode: bash -*-
# shellcheck disable=SC1090 # can't follow non-constant source

if [ -x /bin/dnsdomainname ]
then
    DNSDOMAINNAME=$(/bin/dnsdomainname)
else
    # shellcheck disable=SC2034
    DNSDOMAINNAME=$HOSTNAME
fi

###
### By operating system
###
case $OSTYPE in

darwin*)
  alias locate="mdfind -name"
  alias lock="/System/Library/CoreServices/Menu\ Extras/User.menu/Contents/Resources/CGSession -suspend"

  alias hide-desktop="defaults write com.apple.finder CreateDesktop -bool false && killall Finder"
  alias show-desktop="defaults write com.apple.finder CreateDesktop -bool true && killall Finder"

  if type brew &>/dev/null; then
    HOMEBREW_PREFIX="$(brew --prefix)"
    if [[ -r "${HOMEBREW_PREFIX}/etc/profile.d/bash_completion.sh" ]]; then
      source "${HOMEBREW_PREFIX}/etc/profile.d/bash_completion.sh"
    else
      for COMPLETION in "${HOMEBREW_PREFIX}/etc/bash_completion.d/"*; do
        [[ -r "$COMPLETION" ]] && source "$COMPLETION"
      done
    fi

    BREW_FZF=$HOMEBREW_PREFIX/opt/fzf
    if [[ -r "$BREW_FZF/shell/completion.bash" ]]; then
      source $BREW_FZF/shell/completion.bash
      # standard completions omit vscode
      complete -o bashdefault -o default -F _fzf_path_completion code
    fi
    if [[ -r "$BREW_FZF/shell/key-bindings.bash" ]]; then
      source $BREW_FZF/shell/key-bindings.bash
    fi

    export FZF_DEFAULT_OPTS="--color=dark
--color=fg:-1,bg:#252c31,hl:#c678dd,fg+:#ffffff,bg+:#4b5263,hl+:#d858fe
--color=info:#98c379,prompt:#61afef,pointer:#be5046,marker:#e5c07b,spinner:#61afef,header:#61afef"

    BREW_ASDF=$HOMEBREW_PREFIX/opt/asdf
    test -e $BREW_ASDF/asdf.sh && source $BREW_ASDF/asdf.sh
  fi

  function tn
  {
    terminal-notifier -message "$*"
  }

  export APPLE_SSH_ADD_BEHAVIOR=macos
  # ssh-add -L returns false if no identities present. handy
  # don't need this if you have "UseKeychain yes" in .ssh/config! 
  #ssh-add -L >/dev/null || ssh-add -A 2>&1 | grep -v "Identity added"
;;

linux*)
  test -e ~/.asdf/asdf.sh && source ~/.asdf/asdf.sh
  test -e ~/.asdf/completions/asdf.bash && source ~/.asdf/completions/asdf.bash

  test -e /usr/share/doc/fzf/examples/completion.bash && source /usr/share/doc/fzf/examples/completion.bash
;;

esac

###
### By domain
###
# case $DNSDOMAINNAME in
#
## *2ndsiteinc*|*freshbooks*|*fbks.in*)
##   something here
## ;;
##
## esac

###
### By individual hosts
###
case $HOSTNAME in

# sometimes macOS thinks it's called "flounder-2" ???
flounder*)
;;

rlafferty*)
  export GIT_AUTHOR_EMAIL='rlafferty@pagerduty.com'
  export GIT_COMMITTER_EMAIL=${GIT_AUTHOR_EMAIL}

  export AWS_OKTA_MFA_DUO_DEVICE=token

  function knifestg    { bundle exec knife "$@" -c ~/.chef/stage/knife.rb; }
  function knifeprod   { bundle exec knife "$@" -c ~/.chef/prod/knife.rb; }
  function knifeeu     { bundle exec knife "$@" -c ~/.chef/euprod/knife.rb; }
  function knifedr     { bundle exec knife "$@" -c ~/.chef/dr/knife.rb; }
  function knifetestdr { bundle exec knife "$@" -c ~/.chef/testdr/knife.rb; }

  function chefnode
  {
    # https://github.com/chef/chef/pull/9287
    KNIFE=$1
    shift
    S="$*"
    case "$S" in
    *:*)
      SEARCH="$S"
      ;;
    *)
      SEARCH="tags:*${S}* OR roles:*${S}* OR fqdn:*${S}* OR addresses:*${S}*"
    esac
    cd ~/code/chef || return 1
    $KNIFE search node "$SEARCH" -i
    cd - > /dev/null || return 1
  }

  function prodnode { chefnode knifeprod "$*"; }
  function stgnode  { chefnode knifestg "$*"; }
  function eunode  { chefnode knifeeu "$*"; }

  function livetail { { cd ~/.livetail && unbuffer ./livetail "$@"; } }
  ;;
esac

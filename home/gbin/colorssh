#!/bin/bash
#

# no color if arguments supplied (usually this is for -v)
if [ "$2" ]; then
   exec ssh $*
fi

hostspec=$1
host=$(echo $hostspec | sed -e 's/^.*@//' -e 's/\.[^.]*\.[^.]*$//')

# The default color which will be used when not connected to any host.
default_color="2048, 2048, 2048" 

case "$host" in
### Add special-cases for hosts here
    optimus)  host_color="768, 768, 11808";;
########################################################################

    *) 
    host_color=$(perl -e '
          $DARKNESS = 4;
          $host = $ARGV[0];
          while ($host =~ /(.)/g) { $seed += ord($1) };
          srand($seed); 
          for (1..3) { 
              $c = int(rand() * 65535);
              if ($c > (65535/$DARKNESS)) {
                  $c = $c / $DARKNESS
              }
              push @colors, $c; 
          };
          print join (", ", @colors);
      ' $host)
    ;;
esac

window_name="${host}_SSH_$$"

trap cleanup 1 2 3 6

function cleanup() {
    set_color "$default_color"
    echo -ne "\033]0;\007"
}

function set_color() {
    case "$TERM_PROGRAM" in
    Apple_Terminal)
        echo -ne "\033]0;${window_name}\007"
        osascript -e 'tell application "Terminal" to tell (first window whose name contains "'${window_name}'") to set background color to {'"$1"'}'
        ;;
    iTerm.app)
        osascript <<EOF
        tell application "iTerm2"
            tell current window
                tell current session
                    set background color to {$1}
                    set foreground color to {$2}
                end tell
            end tell
        end tell
EOF

        ;;
    esac
}

set_color "$host_color"

LOCAL_TERMCOLOR="$host_color" ssh -o SendEnv=LOCAL_TERMCOLOR $hostspec

cleanup
